{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","userId","App","useState","userID","setUserId","titles","setTitles","todosFromServer","savedTodos","setsSavedTodos","errorTitle","setErrorTitle","errorValue","setErrorValue","usersFromServer","find","action","method","onSubmit","event","preventDefault","todoIDs","newTodo","Math","max","newTodos","htmlFor","type","placeholder","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3be071d.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [userID, setUserId] = useState(0);\n  const [titles, setTitles] = useState('');\n  const [savedTodos, setsSavedTodos] = useState(todosFromServer);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorValue, setErrorValue] = useState(false);\n\n  const todos: Todo[] = savedTodos.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    const todoIDs = savedTodos.map(todo => todo.id);\n    const newId = Math.max(...todoIDs) + 1;\n\n    const newTodo = {\n      id: newId,\n      title: titles,\n      completed: false,\n      userId: userID,\n    };\n\n    const newTodos = [\n      ...todos,\n      newTodo,\n    ];\n\n    if (userID === 0) {\n      setErrorValue(true);\n    }\n\n    if (titles === '') {\n      setErrorTitle(true);\n    }\n\n    if (userID > 0 && titles !== '') {\n      setsSavedTodos(newTodos);\n      setUserId(0);\n      setTitles('');\n    }\n  };\n\n  const handleChangeUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setErrorValue(false);\n  };\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitles((event.target.value).replace(/[^\\w\\d\\sА-ЯЇЄ]/gi, ''));\n    setErrorTitle(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"./api/users.ts\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titles}\n            onChange={handleChangeTitle}\n          />\n          {errorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            value={userID}\n            data-cy=\"userSelect\"\n            onChange={handleChangeUser}\n          >\n            <option value={0} disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorValue && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}